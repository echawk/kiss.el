#!/usr/bin/emacs --script
;; -*- mode: emacs-lisp -*-
;; This is a CLI wrapper for the kiss.el library.

;; (progn
;;   (require 'kiss))

(unless (file-exists-p (concat user-emacs-directory "elkiss-config.el"))
  (make-directory user-emacs-directory t)
  (with-temp-file (concat user-emacs-directory "elkiss-config.el")
    (prin1
     '(progn
        (require 'package)
        (setq package-archives '(("melpa" . "https://melpa.org/packages/")
                                 ("elpa"  . "https://elpa.gnu.org/packages/")))

        (package-initialize)
        (unless package-archive-contents
          (package-refresh-contents))

        (require 'use-package)
        (use-package tsort :ensure t)

        (if (getenv "KISS_EL_DIR")
            (load-file (concat (getenv "KISS_EL_DIR") "/kiss.el"))
          (load-file "kiss.el")))

     ;; TODO: add a use-package for kiss (once on melpa?)
     (current-buffer))))

;; FIXME: figure out how to have this *just work*
(load-file (concat user-emacs-directory "elkiss-config.el"))

(setq kiss-command (nth 0 argv))
(setq kiss-func (intern (concat "kiss-" kiss-command)))

(pcase kiss-command
  ("alternatives"
   (message "%s" (funcall kiss-func (nth 1 argv) (nth 2 argv))))

  ((or "build" "checksum" "download" "install" "list" "remove")
   (if (nthcdr 1 argv)
       (message "%s" (funcall kiss-func (nthcdr 1 argv)))
     (progn
       (funcall
        kiss-func
        (slot-value (kiss--dir-to-kiss-package default-directory) :name)))))

  ((or "manifest" "owns" "search")
   (message "%s" (funcall kiss-func (nth 1 argv))))

  ((or "preferred" "update" "upgrade")
   (message "%s" (funcall kiss-func))))
